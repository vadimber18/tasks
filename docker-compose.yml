version: '3'

services:
  db:
    image: postgres:alpine
    container_name: tasks-postgres
    env_file:
      - .envs/postgres.env
    restart: unless-stopped

  rabbitmq:
    image: "bitnami/rabbitmq:3.9"
    container_name: tasks-rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    build:
      context: service/.
    container_name: tasks-api
    environment:
      - SERVICE=tasks-api
    env_file:
      - .envs/local.env
    ports:
      - 8084:80
    restart: "no"
    depends_on:
      - db
      - rabbitmq
    volumes:
      - ./var/log/tasks:/var/log
      - ./service/db_model:/service/db_model

  consumer:
    build:
      context: consumer/.
    container_name: tasks-consumer
    environment:
      - SERVICE=tasks-consumer
    env_file:
      - .envs/local.env
    restart: "no"
    depends_on:
      - rabbitmq
    volumes:
      - ./var/log/tasks:/var/log

  worker:
    build:
      context: consumer/.
    command: celery --app=app.worker.celery worker --loglevel=info
    container_name: tasks-worker
    environment:
      - SERVICE=tasks-worker
      - CELERY_BROKER_URL=amqp://test:test@rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc://
    env_file:
      - .envs/local.env
    restart: "no"
    depends_on:
      - rabbitmq
      - consumer
    volumes:
      - ./var/log/tasks:/var/log
